---
name: "Deploy Dev (LZ0) Resources"

on:
  pull_request:
    branches: [dev]

# permission can be added at job level or workflow level
permissions:
  id-token: write
  contents: read # This is required for actions/checkout@v2

jobs:
  DeployMgmtAccountResources:
    runs-on: ubuntu-latest
    environment: dev

    env:
      AWS_REGION: "ca-central-1"
      TF_VAR_ops_account_id: ${{ secrets.TF_VAR_OPS_ACCOUNT_ID }}
      TF_VAR_mgmt_account_phase1_bucket_suffix: ${{ secrets.TF_VAR_MGMT_ACCOUNT_PHASE1_BUCKET_SUFFIX }}

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.MGMT_TFRB_ROLE_TO_ASSUME }}
          role-session-name: GitHubOidcBillingUtilitySession
          aws-region: ${{ env.AWS_REGION }}

      # Ref for Teffaform Versions: https://releases.hashicorp.com/terraform/
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.11

      - name: Terraform Init
        id: init
        run: |
          cd ./management-account-terraform-resources
          terraform init -input=false -force-copy \
            -backend-config="bucket=${{ secrets.MGMT_TFRB_S3_BUCKET_NAME }}" \
            -backend-config="key=terraform-octk-aws-sea-billing-reports/management-account-terraform-resources.tfstate" \
            -backend-config="dynamodb_table=${{ secrets.MGMT_TFRB_DYNAMODB_TABLE_NAME }}" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Fmt
        id: fmt
        run: |
          cd ./management-account-terraform-resources
          terraform fmt
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: |
          cd ./management-account-terraform-resources
          terraform validate
      #
      - name: Terraform Plan
        id: plan
        run: |
          cd ./management-account-terraform-resources
          terraform plan

  DeployOpsAccountResources:
    needs: [DeployMgmtAccountResources]
    runs-on: ubuntu-latest
    environment: dev

    env:
      AWS_REGION: "ca-central-1"
      TF_VAR_lz_mgmt_account_id: ${{ secrets.TF_VAR_MGMT_ACCOUNT_ID }}

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.OPS_TFRB_ROLE_TO_ASSUME }}
          role-session-name: GitHubOidcBillingUtilitySession
          aws-region: ${{ env.AWS_REGION }}

      # Ref for Teffaform Versions: https://releases.hashicorp.com/terraform/
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11

      - name: Terraform Init
        id: init
        run: |
          cd ./operations-account-terraform-resources
          terraform init -input=false -force-copy \
            -backend-config="bucket=${{ secrets.OPS_TFRB_S3_BUCKET_NAME }}" \
            -backend-config="key=terraform-octk-aws-sea-billing-reports/operations-account-terraform-resources.tfstate" \
            -backend-config="dynamodb_table=${{ secrets.OPS_TFRB_DYNAMODB_TABLE_NAME }}" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Fmt
        id: fmt
        run: |
          cd ./operations-account-terraform-resources
          terraform fmt
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: |
          cd ./operations-account-terraform-resources
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd ./operations-account-terraform-resources
          terraform plan
